user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=contact:10m rate=1r/s;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # CSP Header - adjust based on your needs
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://plausible.io https://www.youtube.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https://plausible.io; frame-src https://www.youtube.com; object-src 'none'; base-uri 'self';" always;

        # Cache headers for hashed assets (CSS, JS, fonts, images with hash)
        location ~* \/_assets\/.*\.(css|js|woff|woff2|ttf|eot|png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header ETag on;
            add_header Last-Modified on;
            
            # Security headers for assets
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Cache headers for media files (non-hashed images, videos)
        location ~* \/media\/.*\.(png|jpg|jpeg|gif|ico|svg|webp|avif|mp4|webm|pdf)$ {
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            add_header ETag on;
            add_header Last-Modified on;
            
            # Security headers for media
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Cache headers for sitemap and robots
        location ~* \/(sitemap\.xml|robots\.txt)$ {
            expires 6h;
            add_header Cache-Control "public, max-age=21600";
            add_header ETag on;
            add_header Last-Modified on;
        }

        # No cache for HTML files
        location ~* \.html$ {
            expires off;
            add_header Cache-Control "no-cache, must-revalidate";
            add_header ETag on;
            add_header Last-Modified on;
        }

        # Root and HTML files
        location / {
            try_files $uri $uri/ $uri.html @fallback;
            expires off;
            add_header Cache-Control "no-cache, must-revalidate";
        }

        # Fallback for SPA-like behavior (Astro routing)
        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        # Specific routes for better SEO
        location = / {
            try_files /index.html =404;
        }

        location = /portfolio {
            try_files /portfolio.html /portfolio/index.html =404;
        }

        location = /loren {
            try_files /loren.html /loren/index.html =404;
        }

        location = /a-propos {
            try_files /a-propos.html /a-propos/index.html =404;
        }

        location = /contact {
            try_files /contact.html /contact/index.html =404;
        }

        location = /photographes {
            try_files /photographes.html /photographes/index.html =404;
        }

        # Rate limiting for contact forms (future API)
        location /api/contact {
            limit_req zone=contact burst=5 nodelay;
            # Proxy to future API if needed
            # proxy_pass http://api:3000;
            return 404; # Disabled for V1
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to source files
        location ~* \.(md|json|ts|js\.map|css\.map)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Handle 404 errors gracefully
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # Handle 50x errors
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }

        # Robots.txt and sitemap
        location = /robots.txt {
            try_files $uri $uri/ =404;
            access_log off;
        }

        location = /sitemap.xml {
            try_files $uri $uri/ =404;
            access_log off;
        }

        # Favicon
        location = /favicon.ico {
            try_files /favicon.svg /favicon.ico =404;
            access_log off;
            expires 7d;
        }

        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}