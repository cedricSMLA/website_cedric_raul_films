#!/bin/bash

# Script de healthcheck pour C√©dric Ra√∫l Films
# V√©rifie que l'application est en ligne et r√©pond correctement

set -e

APP_URL="http://localhost:4321"
TIMEOUT=5
EXIT_CODE=0

echo "üè• Healthcheck de C√©dric Ra√∫l Films"
echo "=================================="
echo ""

# Fonction pour v√©rifier un endpoint
check_endpoint() {
    local url=$1
    local expected_status=$2
    local description=$3

    echo -n "V√©rification: $description... "

    HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" --max-time $TIMEOUT "$url" || echo "000")

    if [ "$HTTP_CODE" = "$expected_status" ]; then
        echo "‚úÖ OK ($HTTP_CODE)"
    else
        echo "‚ùå ERREUR (attendu: $expected_status, re√ßu: $HTTP_CODE)"
        EXIT_CODE=1
    fi
}

# 1. V√©rifier le service systemd
echo "1. Service systemd"
if systemctl is-active --quiet cedric-raul; then
    echo "   ‚úÖ Service actif"
else
    echo "   ‚ùå Service inactif"
    EXIT_CODE=1
fi
echo ""

# 2. V√©rifier que l'application r√©pond
echo "2. Application Node.js"
check_endpoint "$APP_URL" "200" "Page d'accueil"
check_endpoint "$APP_URL/health" "200" "Endpoint health"
echo ""

# 3. V√©rifier nginx
echo "3. Service nginx"
if systemctl is-active --quiet nginx; then
    echo "   ‚úÖ nginx actif"
else
    echo "   ‚ùå nginx inactif"
    EXIT_CODE=1
fi
echo ""

# 4. V√©rifier les logs r√©cents pour des erreurs
echo "4. Erreurs r√©centes"
ERROR_COUNT=$(journalctl -u cedric-raul --since "5 minutes ago" | grep -ci "error" || echo "0")
if [ "$ERROR_COUNT" -eq 0 ]; then
    echo "   ‚úÖ Aucune erreur dans les 5 derni√®res minutes"
else
    echo "   ‚ö†Ô∏è  $ERROR_COUNT erreur(s) d√©tect√©e(s) dans les logs"
    # Ne pas consid√©rer comme critique
fi
echo ""

# 5. Utilisation m√©moire
echo "5. Ressources syst√®me"
MEM_USAGE=$(free | grep Mem | awk '{printf "%.1f", $3/$2 * 100.0}')
echo "   M√©moire utilis√©e: ${MEM_USAGE}%"

if [ "$(echo "$MEM_USAGE > 90" | bc)" -eq 1 ]; then
    echo "   ‚ö†Ô∏è  Utilisation m√©moire √©lev√©e"
fi
echo ""

# R√©sultat final
echo "=================================="
if [ $EXIT_CODE -eq 0 ]; then
    echo "‚úÖ Tous les checks ont r√©ussi"
else
    echo "‚ùå Certains checks ont √©chou√©"
fi
echo ""

exit $EXIT_CODE
